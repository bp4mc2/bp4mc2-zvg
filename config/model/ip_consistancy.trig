@prefix elmo: <http://dotwebstack.org/def/elmo#> .
@prefix elmo-rt: <http://dotwebstack.org/def/elmo/result-type/>.
@prefix config: <http://dotwebstack.org/configuration/>.

GRAPH config:Theatre {

  config:RoleConsistancyData a elmo:InformationProduct;
    elmo:backend config:DefaultBackend;
    elmo:resultType elmo-rt:Tuple;
    elmo:query """
      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
      PREFIX skoslex: <http://bp4mc2.org/def/skos-lex#>
      SELECT ?begrip ?begrip_label ?lextype ?role (if(lcase(str(?lextype))=lcase(str(?role)),"","Verschil") as ?div) ?relbegrip ?relbegrip_label
      WHERE {
        ?begrip a skos:Concept.
        ?begrip rdfs:label ?begrip_label.
        FILTER (lang(?begrip_label)="nl" || lang(?begrip_label)="")
        OPTIONAL {
          ?begrip a ?lextype.
          FILTER (?lextype = skoslex:Actor || ?lextype = skoslex:Agent || ?lextype = skoslex:Object || ?lextype = skoslex:Act || ?lextype = skoslex:Record).
        }
        {
          {
            ?relbegrip ?role ?begrip.
            FILTER (?role = skoslex:object || ?role = skoslex:actor || ?role = skoslex:agent || ?role = skoslex:record)
            ?relbegrip rdfs:label ?relbegrip_label.
            FILTER (lang(?relbegrip_label)="nl" || lang(?relbegrip_label)="")
          }
          UNION
          {
            ?begrip ?refrole ?relbegrip.
            FILTER (?refrole = skoslex:object || ?refrole = skoslex:actor || ?refrole = skoslex:agent || ?role = skoslex:record)
            BIND (skoslex:act as ?role)
            ?relbegrip rdfs:label ?relbegrip_label.
            FILTER (lang(?relbegrip_label)="nl" || lang(?relbegrip_label)="")
          }
        }
      }
      ORDER BY ?begrip_label
    """
  .

  config:ClassConsistancyData a elmo:InformationProduct;
    elmo:backend config:DefaultBackend;
    elmo:resultType elmo-rt:Tuple;
    elmo:query """
      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
      PREFIX skoslex: <http://bp4mc2.org/def/skos-lex#>
      PREFIX skosthes: <http://purl.org/iso25964/skos-thes#>
      SELECT ?inst ?inst_label ?typecount ?types ?rolecount ?roles ?rolesdirect
      WHERE {
        ?inst a skos:Concept.
        ?inst rdfs:label ?inst_label.
        FILTER (lang(?inst_label)="nl" || lang(?inst_label)="")
        OPTIONAL
        {
          SELECT ?inst ?inst_label (count(?lextype) as ?typecount) (group_concat(strafter(str(?lextype),"#") ; separator=", ") as ?types)
          WHERE {
            ?inst a skos:Concept.
            ?inst rdfs:label ?inst_label.
            FILTER (lang(?inst_label)="nl" || lang(?inst_label)="")
            OPTIONAL {
              ?inst a ?lextype.
              FILTER (?lextype = skoslex:Actor || ?lextype = skoslex:Agent || ?lextype = skoslex:Object || ?lextype = skoslex:Act || ?lextype = skoslex:Record).
            }
          }
          GROUP BY ?inst ?inst_label
        }
        OPTIONAL
        {
          SELECT ?inst ?inst_label (group_concat(distinct strafter(str(?roletype),"#") ; separator = ", ") as ?rolesdirect)
          WHERE {
            ?inst a skos:Concept.
            ?inst rdfs:label ?inst_label.
            FILTER (lang(?inst_label)="nl" || lang(?inst_label)="")
            OPTIONAL {
              {
                ?act ?roletype ?inst.
                FILTER (?roletype = skoslex:actor || ?roletype = skoslex:agent || ?roletype = skoslex:object || ?roletype = skoslex:record).
              }
            }
          }
          GROUP BY ?inst ?inst_label
        }
        OPTIONAL
        {
          SELECT ?inst ?inst_label (count(distinct ?roletype) as ?rolecount) (group_concat(distinct strafter(str(?roletype),"#") ; separator=", ") as ?roles)
          WHERE {
            ?inst a skos:Concept.
            ?inst rdfs:label ?inst_label.
            FILTER (lang(?inst_label)="nl" || lang(?inst_label)="")
            OPTIONAL {
              {
                ?act ?roletype ?temp.
                ?temp skosthes:broaderGeneric* ?inst.
                FILTER (?roletype = skoslex:actor || ?roletype = skoslex:agent || ?roletype = skoslex:object || ?roletype = skoslex:record).
              }
              UNION
              {
                ?act ?roletype ?temp.
                ?inst (skosthes:broaderGeneric|skosthes:broaderPartitive)* ?temp.
                FILTER (?roletype = skoslex:object || ?roletype = skoslex:record).
              }
            }
          }
          GROUP BY ?inst ?inst_label
        }
      }
    """
  .

}
